# MCP Orchestrator - Monitoring Stack
# Prometheus, Grafana for system monitoring and metrics
# Use with: docker-compose -f docker-compose.monitoring.yml up -d

version: '3.8'

services:
  # Prometheus metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: mcp-orch-prometheus
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - mcp-monitoring

  # Grafana dashboards and visualization
  grafana:
    image: grafana/grafana:latest
    container_name: mcp-orch-grafana
    ports:
      - "${GRAFANA_PORT:-3001}:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./configs/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_SERVER_ROOT_URL=http://localhost:${GRAFANA_PORT:-3001}
    restart: unless-stopped
    networks:
      - mcp-monitoring
    depends_on:
      - prometheus

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  mcp-monitoring:
    driver: bridge
    ipam:
      config:
        - subnet: 10.123.0.0/16
          gateway: 10.123.0.1

# Usage:
# Start monitoring stack: docker-compose -f docker-compose.monitoring.yml up -d
# Stop monitoring stack: docker-compose -f docker-compose.monitoring.yml down
# Access Grafana: http://localhost:3001 (admin/admin)
# Access Prometheus: http://localhost:9090